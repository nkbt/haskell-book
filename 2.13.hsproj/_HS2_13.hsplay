-- Haskell Playground 1.0
(2^) $ 2 + 2
(2^) (2 + 2)
(2^) 2 + 2

(2^) $ (+2) $ 3 * 2


2 + 2 * 3 - 1
2 + (2 * 3) - 1

(^) 10 $ 1 + 1
(^) 10 $ (1 + 1)
(10^) (1 + 1)

2 ^ 2 * 4 ^ 5 + 1
(2 ^ 2) * (4 ^ 5) + 1


1 + 1
2

10 ^ 2
10 + 9 * 10

400 - 37
(-) 37 400

100 `div` 3
100 / 3

2 * 5 + 18
2 * (5 + 18)


-- More fun with functions
let z = 7
let y = z + 8
let x = y ^ 2
let waxOn = x * 5

10 + waxOn
(+10) waxOn
(-) 15 waxOn
(-) waxOn 15

let triple x = x * 3
triple waxOn


triple1 waxOn1

waxOff waxOn
waxOff 10
waxOff (-50)




